// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using World_Of_Generics_API.Data;

#nullable disable

namespace World_Of_Generics_API.Migrations
{
    [DbContext(typeof(StoreDbContext))]
    [Migration("20241004143400_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("World_Of_Generics_API.Models.Category", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifyAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CreateAt = new DateTime(2024, 10, 4, 21, 33, 53, 452, DateTimeKind.Local).AddTicks(4321),
                            Description = "Bút bi",
                            Name = "Pen"
                        },
                        new
                        {
                            ID = 2L,
                            CreateAt = new DateTime(2024, 10, 4, 21, 33, 53, 452, DateTimeKind.Local).AddTicks(4328),
                            Description = "Áo phông",
                            Name = "T-Shirt"
                        });
                });

            modelBuilder.Entity("World_Of_Generics_API.Models.Product", b =>
                {
                    b.Property<long>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ID"));

                    b.Property<long>("CategoryID")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModifyAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<long>("Quantity")
                        .HasColumnType("bigint");

                    b.HasKey("ID");

                    b.HasIndex("CategoryID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ID = 1L,
                            CategoryID = 1L,
                            CreateAt = new DateTime(2024, 10, 4, 21, 33, 53, 452, DateTimeKind.Local).AddTicks(4125),
                            Name = "Bút bi thiên long",
                            Price = 2000.0,
                            Quantity = 0L
                        },
                        new
                        {
                            ID = 2L,
                            CategoryID = 2L,
                            CreateAt = new DateTime(2024, 10, 4, 21, 33, 53, 452, DateTimeKind.Local).AddTicks(4168),
                            Name = "T-Shirt",
                            Price = 2000000.0,
                            Quantity = 0L
                        });
                });

            modelBuilder.Entity("World_Of_Generics_API.Models.Product", b =>
                {
                    b.HasOne("World_Of_Generics_API.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("World_Of_Generics_API.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
